# -*- coding: utf-8 -*-
# Generated by Django 1.11.10 on 2018-03-10 14:46
from __future__ import unicode_literals

import ckeditor.fields
import datetime
from django.db import migrations, models
import django.db.models.deletion
import pod.video.models
import tagging.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('authentication', '0001_initial'),
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.AutoField(
                    auto_created=True, primary_key=True, serialize=False,
                    verbose_name='ID')),
                ('title', models.CharField(
                    max_length=100, unique=True, verbose_name='Title')),
                ('slug', models.SlugField(help_text='Used to access this '
                                          + 'instance, the "slug" is a short '
                                          + 'label containing only '
                                          + 'letters, numbers, '
                                          + 'underscore or dash top.',
                                          max_length=100, unique=True,
                                          verbose_name='Slug')),
                ('description', ckeditor.fields.RichTextField(
                    blank=True, verbose_name='Description')),
                ('headband', models.ImageField(blank=True, max_length=255,
                                               null=True,
                                               upload_to=pod.video.
                                               models.get_upload_path_files,
                                               verbose_name='Headband')),
                ('color', models.CharField(
                    blank=True, max_length=10, null=True,
                    verbose_name='Background color')),
                ('style', models.TextField(
                    blank=True, null=True,
                    verbose_name='Extra style')),
                ('visible', models.BooleanField(
                    default=False,
                    help_text='If checked, the channel appear in a list of '
                    + 'available channels on the platform.',
                    verbose_name='Visible')),
                ('owners', models.ManyToManyField(
                    blank=True, related_name='owners_channels',
                    to='authentication.Owner',
                    verbose_name='Owners')),
                ('users', models.ManyToManyField(
                    blank=True,
                    related_name='users_channels',
                    to='authentication.Owner', verbose_name='Users')),
            ],
            options={
                'verbose_name': 'Channel',
                'verbose_name_plural': 'Channels',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Discipline',
            fields=[
                ('id', models.AutoField(
                    auto_created=True, primary_key=True,
                    serialize=False, verbose_name='ID')),
                ('title', models.CharField(
                    max_length=100, unique=True, verbose_name='title')),
                ('slug', models.SlugField(
                    help_text='Used to access this instance, the "slug" is a '
                    + 'short label containing only letters, numbers, '
                    + 'underscore or dash top.',
                    max_length=100, unique=True, verbose_name='slug')),
                ('description', models.TextField(blank=True, null=True)),
                ('icon', models.ImageField(blank=True, max_length=255,
                                           null=True,
                                           upload_to=pod.video.models.
                                           get_upload_path_files,
                                           verbose_name='Headband')),
            ],
            options={
                'verbose_name': 'Discipline',
                'verbose_name_plural': 'Disciplines',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
                ('id', models.AutoField(
                    auto_created=True, primary_key=True, serialize=False,
                    verbose_name='ID')),
                ('title', models.CharField(
                    max_length=100, unique=True, verbose_name='Title')),
                ('slug', models.SlugField(
                    help_text='Used to access this instance, the "slug" is a '
                    + 'short label containing only letters, numbers, '
                    + 'underscore or dash top.',
                    max_length=100, unique=True, verbose_name='slug')),
                ('description', models.TextField(blank=True, null=True)),
                ('headband', models.ImageField(blank=True, max_length=255,
                                               null=True,
                                               upload_to=pod.video.models.
                                               get_upload_path_files,
                                               verbose_name='Headband')),
                ('channel', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    related_name='themes',
                    to='video.Channel',
                    verbose_name='Channel')),
                ('parentId', models.ForeignKey(blank=True, null=True,
                                               on_delete=django.db.models.
                                               deletion.CASCADE,
                                               to='video.Theme')),
            ],
            options={
                'verbose_name': 'Theme',
                'verbose_name_plural': 'Themes',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.AutoField(
                    auto_created=True, primary_key=True, serialize=False,
                    verbose_name='ID')),
                ('title', models.CharField(
                    max_length=100, unique=True, verbose_name='Title')),
                ('slug', models.SlugField(
                    help_text='Used to access this instance, the "slug" is a '
                    + 'short label containing only letters, numbers, '
                    + 'underscore or dash top.',
                    max_length=100, unique=True, verbose_name='slug')),
                ('description', models.TextField(blank=True, null=True)),
                ('icon', models.ImageField(blank=True, max_length=255,
                                           null=True,
                                           upload_to=pod.video.models.
                                           get_upload_path_files,
                                           verbose_name='Headband')),
            ],
            options={
                'verbose_name': 'Type',
                'verbose_name_plural': 'Types',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(
                    auto_created=True, primary_key=True, serialize=False,
                    verbose_name='ID')),
                ('video', models.FileField(
                    max_length=255,
                    upload_to=pod.video.models.get_storage_path_video,
                    verbose_name='Video')),
                ('allow_downloading', models.BooleanField(
                    default=False, verbose_name='allow downloading')),
                ('is_360', models.BooleanField(
                    default=False, verbose_name='video 360')),
                ('title', models.CharField(
                    max_length=250, verbose_name='Title')),
                ('slug', models.SlugField(
                    help_text='Used to access this instance, the "slug" is a '
                    + 'short label containing only letters, numbers, '
                    + 'underscore or dash top.',
                    max_length=100, unique=True, verbose_name='slug')),
                ('date_added', models.DateField(
                    default=datetime.datetime.now, verbose_name='Date added')),
                ('date_evt', models.DateField(
                    blank=True, default=datetime.datetime.now, null=True,
                    verbose_name='Date of event')),
                ('description', ckeditor.fields.RichTextField(
                    blank=True, verbose_name='Description')),
                ('cursus', models.CharField(
                    choices=[('0', 'None / All'),
                             ('L', 'Bachelor’s Degree'),
                             ('M', 'Master’s Degree'),
                             ('D', 'Doctorate'),
                             ('1', 'Other')],
                    default='0', max_length=1,
                    verbose_name='University course')),
                ('main_lang', models.CharField(
                    choices=[
                        ('fr', 'French')
                    ], default='fr', max_length=2,
                    verbose_name='Main language')),
                ('overview', models.ImageField(blank=True, editable=False,
                                               max_length=255, null=True,
                                               upload_to=pod.video.models.
                                               get_upload_path_files,
                                               verbose_name='Overview')),
                ('duration', models.IntegerField(
                    blank=True, default=0, editable=False,
                    verbose_name='Duration')),
                ('infoVideo', models.TextField(
                    blank=True, editable=False, null=True)),
                ('is_draft', models.BooleanField(
                    default=True,
                    help_text='If this box is checked, '
                    + 'the video will be visible and accessible only by you.',
                    verbose_name='Draft')),
                ('is_restricted', models.BooleanField(
                    default=False,
                    help_text='If this box is checked, '
                    + 'the video will only be accessible to '
                    + 'authenticated users.',
                    verbose_name='Restricted access')),
                ('password', models.CharField(
                    blank=True,
                    help_text='Viewing this video will not be possible '
                    + 'without this password.',
                    max_length=50, null=True, verbose_name='password')),
                ('tags', tagging.fields.TagField(
                    blank=True,
                    help_text='Separate tags with spaces, enclose the tags '
                    + 'consist of several words in quotation marks.',
                    max_length=255,
                    verbose_name='Tags')),
                ('thumbnails', models.ImageField(
                    blank=True,
                    max_length=255,
                    null=True,
                    upload_to=pod.video.models.get_upload_path_files,
                    verbose_name='Thumbnails')),
                ('discipline', models.ManyToManyField(
                    blank=True, to='video.Discipline',
                    verbose_name='Disciplines')),
                ('owner', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    to='authentication.Owner', verbose_name='Owner')),
                ('restrict_access_to_groups', models.ManyToManyField(
                    blank=True,
                    help_text='Select one or more groups who can '
                    + 'access to this video', to='auth.Group',
                    verbose_name='Goups')),
                ('type', models.ForeignKey(
                    default=1, on_delete=django.db.models.deletion.CASCADE,
                    to='video.Type', verbose_name='Type')),
            ],
        ),
        migrations.CreateModel(
            name='ViewCount',
            fields=[
                ('id', models.AutoField(
                    auto_created=True, primary_key=True, serialize=False,
                    verbose_name='ID')),
                ('date', models.DateField(auto_now=True, verbose_name='Date')),
                ('count', models.IntegerField(
                    default=0, editable=False, verbose_name='Number of view')),
                ('video', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    to='video.Video')),
            ],
        ),
    ]
